{"ast":null,"code":"var _jsxFileName = \"/home/pavan/reactTask/src/Components/DataFetcher/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./datafetcher.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DataFetcher = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  useEffect(() => {\n    let isCalled = false;\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(data => {\n      if (!isCalled) {\n        let newData = data;\n        setData(newData.slice(0, 30));\n        setLoading(false);\n        isCalled = true;\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    return () => {\n      isCalled = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-fetcher-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data && data.map((d, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [d.name, \" - \", d.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: d.web_pages,\n              target: \"_blank\",\n              children: d.web_pages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(DataFetcher, \"MtQHu1ErHECR5hrYY/Nxp8peoOw=\");\n_c = DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DataFetcher","_s","loading","setLoading","data","setData","isCalled","fetch","then","res","json","newData","slice","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","d","i","name","country","href","web_pages","target","_c","$RefreshReg$"],"sources":["/home/pavan/reactTask/src/Components/DataFetcher/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./datafetcher.css\"\n\n\nexport const DataFetcher = () => {\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState<any>()\n    useEffect(() => {\n        \n        let isCalled = false\n        fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then((data) => {\n            if (!isCalled) {\n                let newData = data\n                setData(newData.slice(0, 30))\n                setLoading(false)\n                isCalled = true\n            }\n        }).catch((error) => { console.log(error) })\n\n        return () => {\n            isCalled = false\n        }\n    }, [])\n\n    return (\n        <div className=\"data-fetcher-container\">\n            {loading ? \n            <div className=\"loading-container\">\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            <span className=\"loading\"></span>\n            </div> :\n                <>{data && data.map((d: any, i: number) => {\n                    return (\n                        <div key={i} className=\"country-details\">\n                            <div>\n                                <h3>{d.name} - {d.country}</h3>\n                                <a href={d.web_pages} target=\"_blank\">{d.web_pages}</a>\n                            </div>\n                        </div>\n                    )\n                })}\n                </>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}